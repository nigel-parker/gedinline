plugins {
    id 'groovy'
    id 'maven-publish'
    id 'com.dorongold.task-tree' version '1.4'
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'commons-lang:commons-lang:2.1'
    implementation 'commons-io:commons-io:1.3.2'
    implementation 'joda-time:joda-time:1.5.2'
    implementation 'org.codehaus.groovy:groovy-all:2.5.23'
    implementation 'commons-validator:commons-validator:1.7'

    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs += ['src/main/java'] }
    }
}

test {
    outputs.upToDateWhen { false }
}

task fatJar(type: Jar) {
    dependsOn 'test'

    manifest {
        attributes 'Main-Class': 'gedinline.main.Main'
    }

    archiveBaseName = 'gedinline'
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }

    with jar
}

group = 'gedinline'
version = '3.1.6'

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

/*
task copyReadMe(type: Copy) {
    from 'src/test/resources/readMe'
    include 'README.md'
    into '.'
    expand([
            version: version,
    ])
}
*/

classes {
    dependsOn createProperties
}

task gedinline {
    dependsOn 'clean'
    dependsOn 'fatJar'
    dependsOn 'groovydoc'
}

publishing {
    publications {
        gedinline(MavenPublication) {
            artifactId = 'gedinline'
            artifact fatJar
            pom {
                name = 'GED-inline'
                description = 'A validator for GEDCOM files'
                url = 'http://ged-inline.elasticbeanstalk.com'
                developers {
                    developer {
                        id = 'nigel'
                        name = 'Nigel Munro Parker'
                        email = 'nigel.parker@sottovoce.no'
                    }
                }
            }
        }
    }
}
